oc policy add-role-to-user edit -z argocd-server -n argocd-2
oc adm policy add-scc-to-user anyuid -z argocd-server -n argocd-2

oc policy add-role-to-user edit -z default -n aka-test
oc adm policy add-scc-to-user anyuid -z default -n aka-test

oc adm policy add-scc-to-user privileged system:serviceaccount:argocd-2:argocd-application-controller
oc adm policy add-scc-to-user privileged system:serviceaccount:argocd-2:argocd-server
oc adm policy add-scc-to-user privileged system:serviceaccount:argocd-2:argocd-repo-server
oc adm policy add-scc-to-user privileged system:serviceaccount:argocd-2:argocd-redis
oc adm policy add-scc-to-user privileged system:serviceaccount:argocd-2:argocd-notifications-controller
oc adm policy add-scc-to-user privileged system:serviceaccount:argocd-2:argocd-dex-server
oc adm policy add-scc-to-user privileged system:serviceaccount:argocd-2:argocd-applicationset-controller

[root@bastion operators]# kubectl apply -n argocd-2 -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
customresourcedefinition.apiextensions.k8s.io/applications.argoproj.io unchanged
customresourcedefinition.apiextensions.k8s.io/applicationsets.argoproj.io unchanged
customresourcedefinition.apiextensions.k8s.io/appprojects.argoproj.io unchanged
serviceaccount/argocd-application-controller created
serviceaccount/argocd-applicationset-controller created
serviceaccount/argocd-dex-server created
serviceaccount/argocd-notifications-controller created
serviceaccount/argocd-redis created
serviceaccount/argocd-repo-server created
serviceaccount/argocd-server created
role.rbac.authorization.k8s.io/argocd-application-controller created
role.rbac.authorization.k8s.io/argocd-applicationset-controller created
role.rbac.authorization.k8s.io/argocd-dex-server created
role.rbac.authorization.k8s.io/argocd-notifications-controller created
role.rbac.authorization.k8s.io/argocd-server created
clusterrole.rbac.authorization.k8s.io/argocd-application-controller unchanged
clusterrole.rbac.authorization.k8s.io/argocd-server unchanged
rolebinding.rbac.authorization.k8s.io/argocd-application-controller created
rolebinding.rbac.authorization.k8s.io/argocd-applicationset-controller created
rolebinding.rbac.authorization.k8s.io/argocd-dex-server created
rolebinding.rbac.authorization.k8s.io/argocd-notifications-controller created
rolebinding.rbac.authorization.k8s.io/argocd-server created
clusterrolebinding.rbac.authorization.k8s.io/argocd-application-controller unchanged
clusterrolebinding.rbac.authorization.k8s.io/argocd-server unchanged
configmap/argocd-cm created
configmap/argocd-cmd-params-cm created
configmap/argocd-gpg-keys-cm created
configmap/argocd-notifications-cm created
configmap/argocd-rbac-cm created
configmap/argocd-ssh-known-hosts-cm created
configmap/argocd-tls-certs-cm created
secret/argocd-notifications-secret created
secret/argocd-secret created
service/argocd-applicationset-controller created
service/argocd-dex-server created
service/argocd-metrics created
service/argocd-notifications-controller-metrics created
service/argocd-redis created
service/argocd-repo-server created
service/argocd-server created
service/argocd-server-metrics created
deployment.apps/argocd-applicationset-controller created
deployment.apps/argocd-dex-server created
deployment.apps/argocd-notifications-controller created
deployment.apps/argocd-redis created
deployment.apps/argocd-repo-server created
deployment.apps/argocd-server created
statefulset.apps/argocd-application-controller created
networkpolicy.networking.k8s.io/argocd-application-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-applicationset-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-dex-server-network-policy created
networkpolicy.networking.k8s.io/argocd-notifications-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-redis-network-policy created
networkpolicy.networking.k8s.io/argocd-repo-server-network-policy created
networkpolicy.networking.k8s.io/argocd-server-network-policy created


curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64

root@bastion test]# argocd cluster add
ERRO[0000] Choose a context name from:
CURRENT  NAME                                                                   CLUSTER                               SERVER
         airflow2/api-varocpprod-core-ziraat-bank:6443/kube:admin               api-varocpprod-core-ziraat-bank:6443  https://api.varocpprod.core.ziraat.bank:6443
			...
		 
[root@bastion test]# argocd cluster add argocd-2/api-varocpprod-core-ziraat-bank:6443/kube:admin
WARNING: This will create a service account `argocd-manager` on the cluster referenced by context `argocd-2/api-varocpprod-core-ziraat-bank:6443/kube:admin` with full cluster level privileges. Do you want to continue [y/N]? y
INFO[0002] ServiceAccount "argocd-manager" created in namespace "kube-system"
INFO[0002] ClusterRole "argocd-manager-role" created
INFO[0002] ClusterRoleBinding "argocd-manager-role-binding" created
Cluster 'https://api.varocpprod.core.ziraat.bank:6443' added
[root@bastion test]#
